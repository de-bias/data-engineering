---
title: "pickwell-od"
format: html
editor: visual
---

# Import libraries

```{r}
library(dplyr)
library(sf)
library(ggplot2)
library(tmap)
library(viridis)
library(spdep)
library(sysfonts)
library(showtextdb)
library(classInt)
library(scales)
library(forcats)
library(spgwr)
library(arrow)
library(h3)
library(archive)
library(ggspatial)
library(basemapR)
library(data.table)
library(arrow)
library(lobstr)
```

# Set themes

```{r}
#| include = FALSE
source("./style/data-visualisation_theme.R")
```

# Data import

## Census and boundaries

```{r}
wd <- "/Volumes/rdm04/DEBIAS"
wd_local <- "/Users/carmen/Documents/github/de-bias"

```

```{r}
# df_pop_census <- read.csv(paste0(wd, "/data/inputs/census/census2021-ts/census2021-ts001/census2021-ts001-ltla.csv")) %>% select(date, geography, geography.code, Residence.type..Total..measures..Value) %>% rename("code" = "geography.code", "name" = "geography", "pop" = "Residence.type..Total..measures..Value")

df_boundaries <- st_read(paste0(wd, "/data/inputs/geographies/boundaries/LAD_Dec_2021_GB_BFC_2022.gpkg")) %>% select(LAD21CD, SHAPE) %>% rename("code" = "LAD21CD")

df_boundaries_up <- st_read(paste0(wd, "/data/inputs/geographies/boundaries/RGN_Dec_2021_EN_BFC_2022.gpkg")) %>% st_simplify(preserveTopology = FALSE, dTolerance = 1000)

df_boundaries_hex <- st_read(paste0(wd, "/data/inputs/geographies/hexboundaries/uk-local-authority-districts-2021.geojson")) %>% st_transform(st_crs(df_boundaries_up)) %>% rename("code" = "id")
```

## Digital trace data from Pickwell

### pickwell

Read parquet dataset using arrow

```{r}
# Remove suffix "test" if working with the full dataset. Test is for a smaller portion (e.g. one day)
data_parquet <- open_dataset("/Volumes/rdm04/DEBIAS/data/inputs/pickwell/uk_parquet/converted_parquet/part-0.parquet", format="parquet")   
```

Check size of object

```{r}
lobstr::obj_size(data_parquet)
```

Check schema

```{r}
data_parquet$schema
```
# Data processing

Aim: for each unique device, let's extract the place of residence as the MSOA where they've been seen most times between 11pm and 7 am.

The data will be stored in a dataset with two columns: device ID and MSOA of residence.

## Start by identifying the unique devices and storing them in a dataframe

```{r}
df <- data_parquet %>% 
  select(device_aid) %>%
  distinct() %>%
  filter(!is.na(device_aid)) %>% # Exclude NA values
  collect() 

```

```{r}
length(unique(df$device_aid))
```

Next steps:

- For each unique id, let's filter data_parquet to only include rows with that device. Then filter by the relevant hours (will need to "decode" the timestamp"). Then find the MSOA of each location (or perhaps the hex at a low resolution). Then decide which is the most common one and asign it the MSOA or residence. The most common in "working hours" on weekdays could be the workplace...
